{"componentChunkName":"component---src-templates-blog-post-js","path":"/boost-camp-membership/12/","result":{"data":{"site":{"siteMetadata":{"title":"Daily Study | Sukjae"}},"markdownRemark":{"id":"e65a3647-a935-5f41-bbb8-d50be751ac0b","excerpt":"오늘의 고민들 모던한 웹 환경에서 사용자 인증과 권한 부여는 어떻게 이루어 질까 위 내용을 살펴보며 중요한 키워드 몇가지가 눈에 띄었다. OAuth2.0 OpenID Connect SAML SSO JWT…","html":"<h2>오늘의 고민들</h2>\n<h3>모던한 웹 환경에서 사용자 인증과 권한 부여는 어떻게 이루어 질까</h3>\n<p>위 내용을 살펴보며 중요한 키워드 몇가지가 눈에 띄었다.</p>\n<ul>\n<li>OAuth2.0</li>\n<li>OpenID Connect</li>\n<li>SAML</li>\n<li>SSO</li>\n<li>JWT</li>\n</ul>\n<p>재밌는 점은, 여러 인증방식이 사용하는(목표하는) 환경에 따라 서로 다른 기술을 사용한다는 점이다.\n이러한 기술들을 더 학습하고, 이번 과제에서 적용해보고자 노력하고 있다.</p>\n<h3>OAuth2.0, OpenID Connect 왜 쓸까?</h3>\n<p>이러한 Auth관련 서버를 직접 구축하지 않고 제 3의 벤더에서 제공받는 이유가 무엇일까?</p>\n<p>이 의문에 대해 아래 동영상을 시청하며 어느정도 공감가는 결론에 도달할 수 있었다.</p>\n<ul>\n<li>Auth관련 보안 업데이트를 진행한다던지,</li>\n<li>서버를 유지 보수하는 등의 작업이 필요하고</li>\n<li>이는 유저 정보 보호를 위해 필수적이다.</li>\n</ul>\n<p>그러나, 서비스 제공차 측면에서 Auth관련 서버와 서비스를 유지하기란 쉽지 않다.</p>\n<p>그래서, 이를 하나의 신뢰되는 서비스 업체에서 관리를 위임하고, 제공받는 방법을 사용한다.</p>\n<h3>OpenID 는 Authentication을 위한 프로토콜이고, OAuth2.0은 Authorization을 위한 것이다.</h3>\n<p>그런데… OpendID 는 OAuth2.0위에 구현되어 있다.</p>\n<p>여기서 든 의문은(아직 해결되지 않았지만)</p>\n<ul>\n<li>Authorization은 Authentication에 대한 정보를 일부 포함하고 있을텐데…</li>\n<li>어떻게(왜) 더 많은 정보를 갖고 있는 것에서 더 작은 정보를 갖고 잇는 것을 개발(사용)하는 것 일까</li>\n</ul>\n<p>더 학습이 필요하다</p>\n<h2>오늘의 회고</h2>\n<p>오늘은 집에 물이 세서 급하게 가야했다.</p>\n<p>학습해야 할 것이 많고, 구현해야 할 것이 많았지만,</p>\n<p>내 의지와 상관없는 외부 요인으로 목표를 달성하지 못해 아쉽다.</p>","frontmatter":{"title":"부스트캠프 2019 맴버쉽 12","date":"September 06, 2019"}}},"pageContext":{"slug":"/boost-camp-membership/12/","previous":{"fields":{"slug":"/boost-camp-membership/11/"},"frontmatter":{"title":"부스트캠프 2019 맴버쉽 11"}},"next":{"fields":{"slug":"/boost-camp-membership/13/"},"frontmatter":{"title":"부스트캠프 2019 맴버쉽 13"}}}}}