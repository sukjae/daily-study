{"componentChunkName":"component---src-templates-blog-post-js","path":"/daily/2020-01-23/","result":{"data":{"site":{"siteMetadata":{"title":"Daily Study | Sukjae"}},"markdownRemark":{"id":"555fa84c-a450-5ed4-b4bd-8c4a36222ce6","excerpt":"css 작업을 하기 위해  와 같은 도구를 사용하곤 한다. 그 이유는 브라우저마다 HTML tag…","html":"<p>css 작업을 하기 위해 <code class=\"language-text\">normalize.css</code> 와 같은 도구를 사용하곤 한다. 그 이유는 브라우저마다 HTML tag에 각자의 기본적인 스타일을 적용하고, 개발자 입장에서 통일된 스타일을 제공하기 위해 초기화 하는 것이다.</p>\n<p>이런 도구들은 여럿 있는데, 그 중에는 초기화 작업 뿐만 아니라 몇가지 실용적인 자체 스타일을 설정하기도 한다. 예를 들어, 스타일을 편하게 하기 위해 자주 쓰이는 트릭인 <code class=\"language-text\">box-sizing: border-box;</code> 속성을 글로벌하게 적용한다던지 말이다.</p>\n<p>많이 쓰이는 <code class=\"language-text\">normalize.css</code> 의 경우에는 브라우저마다 서로 다른 스타일을 초기화 해 주는데, 신기하게도 이미 통일된 규격은 그대로 유지한다고 한다. 이 외에도 <code class=\"language-text\">sanitize.css</code> 나 <code class=\"language-text\">modern-normalize</code> 등 과 같이 <code class=\"language-text\">normalize.css</code> 에서 파생되어 실용적인 기능들을 추가한 라이브러리들도 존재한다. 이들에 대한 <strong>시각적인 비교는</strong> 다음 링크에서 확인할 수 있다. <a href=\"https://codepen.io/chriscoyier/pen/JpLzjd\">codepen</a></p>\n<p>다음 링크에서 확인할 수 있듯이, <a href=\"https://www.npmtrends.com/normalize.css-vs-sanitize.css-vs-reset-css-vs-modern-normalize\">normalize.css vs sanitize.css vs reset-css vs modern-normalize, npm trents</a> 사용량은 <code class=\"language-text\">normalize.css</code> 가 압도적으로 많았지만, <code class=\"language-text\">sanitize.css</code> 가 매섭게 추격 하고 있고, 아직 나머지 둘은 대중적인진 않다. <code class=\"language-text\">normalize.css</code> 에서 모던한 브라우저를 모두 지원하면서 실용적인 기능을 넣고도 유사한 파일 크기를 유지한 <code class=\"language-text\">modern-normalize</code> 도 손이 가지만, 나는 <code class=\"language-text\">sanitize.css</code> 도 좋은 것 같다.</p>\n<p>이들 대부분이 npm으로 제공되고, css파일로도 제공되니 사용하면서 원하지 않는 부분을 제거하며 튜닝하는 방법도 있겠다…만 그냥 학습용으로만 들여다 볼 것 같다.</p>\n<h2>참조</h2>\n<ul>\n<li><a href=\"https://css-tricks.com/reboot-resets-reasoning/\">reboot-resets-reasoning, CSS Trick</a></li>\n<li><a href=\"https://www.npmtrends.com/normalize.css-vs-sanitize.css-vs-reset-css-vs-modern-normalize\">normalize.css vs sanitize.css vs reset-css vs modern-normalize, npm trents</a></li>\n<li><a href=\"https://codepen.io/chriscoyier/pen/JpLzjd\">codepen</a></li>\n</ul>","frontmatter":{"title":"HTML 엘리먼트 기본 스타일 제거하기","date":"January 23, 2020"}}},"pageContext":{"slug":"/daily/2020-01-23/","previous":{"fields":{"slug":"/daily/2020-01-18/"},"frontmatter":{"title":"Microbrowser 간단 느낌 정리"}},"next":{"fields":{"slug":"/daily/2020-01-25/"},"frontmatter":{"title":"CSS의 Width/Height VS HTML attributes의 Width/Height"}}}}}