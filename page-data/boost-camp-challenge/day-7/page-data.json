{"componentChunkName":"component---src-templates-blog-post-js","path":"/boost-camp-challenge/day-7/","result":{"data":{"site":{"siteMetadata":{"title":"Daily Study | Sukjae"}},"markdownRemark":{"id":"0c7c7491-cc5b-525e-9324-e35eef405e81","excerpt":"피어 세션 어제 작성한 코드를 돌아보며 두가지 부분에 대한 생각을 추가로 정리하였다.  를 구현 하면서  에 접근 하기위한 3가지 방법  를 다른 변수에 넣기  해주기 arrow function…","html":"<h2>피어 세션</h2>\n<p>어제 작성한 코드를 돌아보며 두가지 부분에 대한 생각을 추가로 정리하였다.</p>\n<h3><code class=\"language-text\">bindMembers</code> 를 구현 하면서 <code class=\"language-text\">this.msg</code> 에 접근 하기위한 3가지 방법</h3>\n<ol>\n<li><code class=\"language-text\">this</code> 를 다른 변수에 넣기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript=\"><pre class=\"language-javascript=\"><code class=\"language-javascript=\">const Checker = class {\n    ...\n    bindMembers(names) {\n        const that = this\n        return function (source) {\n         ... // 여기서 that으로 that.msg 접근 가능</code></pre></div>\n<ol start=\"2\">\n<li><code class=\"language-text\">bind</code> 해주기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript=\"><pre class=\"language-javascript=\"><code class=\"language-javascript=\">const Checker = class {\n    ...\n    bindMembers(targets) {\n    return checkMember.bind(this);\n    function checkMember(source) {\n    \t\t\t\t... // 여기서 this으로 this.msg 접근 가능</code></pre></div>\n<ol start=\"3\">\n<li>arrow function를 사용하여 기능을 구현하고 <code class=\"language-text\">this</code>와 같은 위치 <code class=\"language-text\">constructor</code> 에 넣어주기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript=\"><pre class=\"language-javascript=\"><code class=\"language-javascript=\">const Checker = class {\n    constructor(msg) {\n      this.msg = msg;\n      this.bindMembers = () =&gt; ... // 여기서 this으로 this.msg 접근 가능</code></pre></div>\n<h3><code class=\"language-text\">lodash</code> 로 부터 필요한 메소드만 불러와서 사용하기</h3>\n<p>챌린지 미션에서 사용된 <code class=\"language-text\">lodash</code> 메소드는 <code class=\"language-text\">every</code> 하나뿐 이였다.</p>\n<p>이를 위해 <code class=\"language-text\">lodash</code> 의 모든 메소드를 불러오는 것은 불필요 하기 때문에 한가지 메소드 (<code class=\"language-text\">every</code> 만 불러오게 하였다.) 최종적으로 번들 사이즈를 줄일 수 있다.</p>\n<p><strong>기존 코드</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript=\"><pre class=\"language-javascript=\"><code class=\"language-javascript=\">const _ = require(&quot;lodash&quot;)</code></pre></div>\n<p><strong>수정된 코드</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript=\"><pre class=\"language-javascript=\"><code class=\"language-javascript=\">const _every = require(&quot;lodash/every&quot;)</code></pre></div>\n<h2>챌린지 중 느낀것</h2>\n<p>오늘은 주어진 미션을 따라 스켈레톤 &#x26; 수도코드 작성하며 디자인을 먼저하고 개발을 진행하였다.</p>\n<p>이번에는 간단한 함수 구현이 아닌 실제 돌아가는 프로그램을 제작하였는데, 나는 이를 최대한 함수형으로 작성하려 노력했다.</p>\n<p>또한 코드를 작성함에 있어 TDD를 접목하고자 시도하였다.</p>\n<h3>스켈레톤</h3>\n<p>스켈레톤을 처음 작성해 봐서 그런지 생각을 정리하는데 어려움이 많았고, 후에 구현된 코드는 스켈레톤 코드와 큰 차이가 생겼다. 스켈레톤을 작성하며 기능을 나누고, 어떤 관계를 갖을지 고민하는게 어려웠던 것 같다.</p>\n<h3>TDD</h3>\n<p>오늘은 TDD와 Test code에 대한 장점을 잘 느긴것 같다</p>\n<p>이를 구현하기 위해 시간은 굉장히 많이 소요 되었고, 나중에는 시간이 부족하여 모든 부분을 TDD로 구현 하지는 못했지만, 그 위력을 느끼기에 충분한 시간이였다.</p>\n<p>오늘 나는 6시가 다 되어서 내 코드에 설계적 오류가 있음을 발견하였다 .</p>\n<p>하나하나 유닛테스트를 작성해 가며 큰 문제 없이 기능들을 작성하였지만,</p>\n<p>이 기능들이 한데 모이는 테스트 코드를 작성하며 이 문제를 발견하였다.</p>\n<p>(어떻게 보면 통합 테스트 중에 문제를 찾은것 같다.)</p>\n<p>내가 가졌던 설계 미스는 아주 바보 같은 실수였는데, 문제는 코드를 작성하며 가장 작은 기능만을 생성하니 이 문제가 쉽게 보이지 않았다는 점이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><span class=\"token property\">\"todo\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"todo\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"someId\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"someTitle\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"[someTag]\"</span><span class=\"token punctuation\">}</span>...</code></pre></div>\n<p>위 코드와 같이 todo라는 key값으로 value를 array로 포함 하는데, 그 array 안의 각각의 객체들이 다시 한번 type으로서 동일한 정보를 가져버렸다.</p>\n<p>기능을 구현하면서 위 부분을 객체속의 type만 고민하며 코드를 작성 하였는데, 나중에 보니 리스트에서 추가 삭제 이동 하는 기능이 필요해서 멘붕이 왔다. 어찌보면 모든 로직을 다시 짜야 할 수 있는 상황임에도 불구하고, Test코드 덕분에 문제를 나름 수월하게 해결할 수 있었다.</p>\n<p>다행히 나에겐 테스트가 있었고, <code class=\"language-text\">yarn test --watchAll</code> 를 참조하며 실시간으로 코드에서 변화시켜야 할 부분을 수정해 갈 수 있었다. 테스트 덕분에 어떤 부분들이 오류가 있고, 어떤 기대값을 갖는지 체크해가면서 방향을 잡을 수 있었다 .</p>\n<p>이와 같이 틀린길로 가거나 내가 생각지 못한 이슈가 터질때 테스트는 큰 힘을 발휘하는것 같다. 테스트와 함께하면 복잡한 문제도 큰 어려움 없이 차근차근 헤쳐갈 수 있다</p>\n<p>TDD는 에러를 수정할때도 큰 힘을 발휘햇지만 처음 코드를 작성 할때도 많은 도움이 되었다. 기능별로 새분화하여 하나씩 초록불을 만들어 가다 보니, 나중에는 하나의 통합 기능이 완성되어 이를 잘 활용할 수 잇었다. 각각의 기능이 제 역할을 제대로 잘 수행 하므로, 이 기능을 사용하여 다른 기능을 구현할 때 먼저 구현한 기능이 오류가 있을 여지가 확실히 줄었던 것 같다.</p>\n<p>TDD로 구현을 하면 복잡한 로직을 머릿속에 다 넣고 있지 않더라도 차근차근 기능을 구현해갈 수 있는것 같다. 이 덕분에 멘붕에 빠지지 않았던 것 같다.</p>\n<h3>함수형 코드</h3>\n<p>이번에 나는 코드를 최대한 함수형으로 작성하려 노력햇다. 물론 후반에 시간이 없어 많이 꼬이긴 했지만, 함수형의 장점을 많이 느낄 수 있었다.</p>\n<p>이전 시간에 수행했던 단순한 기능을 만드는 과제에서 넘어가 여러 기능들이 통합되는 작업물을 만드니, 확실히 함수형으로 작성하는게 큰 도움이 되었다.</p>\n<p>특히 순수 함수로서 사이드 이펙트 없이 데이터를 핸들링 한다는 점 덕분에 코드를 술술 짤 수 있었다.</p>\n<p>항상 새로운 객체, 배열을 반환하고 기존의 데이터를 치환하는 형태로 코드를 작성하니, 기능들이 서로 디커플링이 잘 되고 사용이 편리 하였다.</p>\n<p>특히, 문제가 생겻을 때 문제가 되는 함수만을 찾아 수정 할 수 있고, 이 수정이 다른 곳에 미칠 영향을 크게 생각 안하고 수정할 수 있다는 점이 굉장히 편리했다.</p>\n<p>물론, 내가 작성한 코드들이 최적화가 되었거나, 효율적이진 못하다. 매 순간 데이터를 복사하여 치환해야 하기 때문에 자연스레 로드가 많이 들 수 있다. 이는 더 수정을 하여 발전시켜야 할 부분이다.</p>\n<h2>회고</h2>\n<p>오늘도 정신없는 하루 였다. 아쉬운 점이 있다면, 어느샌가 코드 구현에 급급하여 글을 잘 읽으려 하지 않는 나의 모습이 보였다는 것이다.</p>\n<p>항상 생각하며 코드를 작성하도록 노력하자.</p>","frontmatter":{"title":"부스트캠프 2019 챌린지 7일차","date":"July 23, 2019"}}},"pageContext":{"slug":"/boost-camp-challenge/day-7/","previous":{"fields":{"slug":"/boost-camp-challenge/day-6/"},"frontmatter":{"title":"부스트캠프 2019 챌린지 6일차"}},"next":{"fields":{"slug":"/boost-camp-challenge/day-8/"},"frontmatter":{"title":"부스트캠프 2019 챌린지 8일차"}}}}}