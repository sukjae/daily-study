{"componentChunkName":"component---src-templates-blog-post-js","path":"/boost-camp-membership/6/","result":{"data":{"site":{"siteMetadata":{"title":"Daily Study | Sukjae"}},"markdownRemark":{"id":"11c178f9-f056-5d6b-abb7-19a0b65e954a","excerpt":"마스터 클래스 정리 TCP소켓과 웹소켓의 차이, 브라우저에서 왜 필요한지 생각해보자 브라우저 없이 TCP/IP…","html":"<h2>마스터 클래스 정리</h2>\n<ul>\n<li>TCP소켓과 웹소켓의 차이, 브라우저에서 왜 필요한지 생각해보자</li>\n<li>\n<p>브라우저 없이 TCP/IP 소켓에 직접 연결한다면, 연결 자체(반환된 객체값)가 고유 식별자가 될 수 있다</p>\n<ul>\n<li>그러므로 통신에서 별도의 인증에 관련한 정보를 녹일 필요가 없다</li>\n<li>그러나, 브라우저의 경우 웹소켓 등과 같은 방법으로 연결을 유지해야 한다.</li>\n</ul>\n</li>\n<li>\n<p>쿠키의 유지 주체는 클라이언트, 생성 요청은 서버가 한다.</p>\n<ul>\n<li>쿠키는 key-value 형태의 데이터 이다</li>\n<li>쿠키는 key 같은 키값을 통해 value를 업데이트 할 수 있다.</li>\n<li>삭제는 클라이언트에서 만료시간에 따라 진행한다.</li>\n<li>만료시간은 서버가 설정한다.</li>\n<li>세션은 유저 정보가 아닌 고유의 세션 ID 를 생성하여 제공한다</li>\n<li>이 또한 hash map으로 ID를 키값으로 제공한다.</li>\n<li>세션 ID는 무작위 탈취가 어렵도록 uuid와 같은 복잡한 값을 사용한다</li>\n</ul>\n</li>\n<li>\n<p>세션 DB에 유저 정보가 너무 안들어가면, UserDB를 계속 조회해야 한다.</p>\n<ul>\n<li>그래서 세션 DB에 최소한의 필요한 요소를 기본적으로 넣어야 한다.</li>\n<li>최대한 다른 DB를 적게 조회 하도록 하자.</li>\n<li>쿠키가 메모리에 들어가 있음에도, 껏다 켯을때 살아 있는 이유는 파일로 저장되기 때문이다!!</li>\n</ul>\n</li>\n<li>console.log 하지 말고 breakpoint사용하자! 강제적으로</li>\n<li>테스트 자동화 도구를 사용해보자 (아이디, 패스워드 100번식 누르지 말자)</li>\n</ul>\n<h2>현재 공부하고 있는 부분</h2>\n<h3>1. git commit message convention</h3>\n<p>팀별로 다양한 convention이 있는듯 하지만, 그럼에도 잘 다듬어진 사례들을 정리함이 중요하다.</p>\n<p>그 중에서도 <a href=\"https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines\">Angular의 commit message guideline</a>을 많이 활용하는 것 같다.</p>\n<p>나 또한 이 가이드라인을 바탕으로 내 커밋 메세지의 규칙을 만드는 과정에 있다.</p>\n<p>이러한 스타일링을 강제하는 도구들도 있고, 도움을 주는 도구들도 있는듯 하니 잘 찾아보는것이 좋겠다.</p>\n<p>이와 더불어 Git flow등에 대한 학습을 다시 시작해야 한다.</p>\n<h3>2. OAuth 2.0 specification</h3>\n<p><strong><a href=\"https://tools.ietf.org/html/rfc6749\">공식 명세 링크</a> :</strong> 오늘부터 이 글을 천천히 읽고 있다.</p>\n<p>모던 웹 환경에서 OAuth2.0에 대한 이해는 필수적이다. 특히, 어떤 규칙과 관계를 갖고 있는지 파악하는게 중요하다 생각해 공부를 시작했다.</p>\n<p>그 전에는, 다양한 블로그나 동영상으로 관련 내용을 알아봤는데… 다 각각 용어나 내용에 차이가 있었다.</p>\n<p>아무래도, 공식자료를 기반으로 개개인의 해석이 섞여 들어 용어등의 정의나 사용에 난해함이 생겼다.</p>\n<p>그러다가 우연히 위 문서를 읽어보게 되었고, 명확하고 간결한 내용에 쉽게 이해를 할 수 있었다.</p>\n<p>항상 공부하며, client는 무엇인지, role은 무엇인지, grant types은 무엇들이 있는지, 그리고 이것들이 어떻게 조화를 이루는지 이해하기 어려웠는데, 8쪽까지만 읽은 현 상황에서 대충 감이 올 정도록 내용이 간결하다.</p>\n<p>70여쪽의 짧은 문서이므로 빠른 시간내에 내용을 모두 읽어보고 정리하도록 하겠다.</p>","frontmatter":{"title":"부스트캠프 2019 맴버쉽 6","date":"August 31, 2019"}}},"pageContext":{"slug":"/boost-camp-membership/6/","previous":{"fields":{"slug":"/boost-camp-membership/5/"},"frontmatter":{"title":"부스트캠프 2019 맴버쉽 5"}},"next":{"fields":{"slug":"/boost-camp-membership/7/"},"frontmatter":{"title":"부스트캠프 2019 맴버쉽 7"}}}}}