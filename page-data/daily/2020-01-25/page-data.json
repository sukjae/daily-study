{"componentChunkName":"component---src-templates-blog-post-js","path":"/daily/2020-01-25/","result":{"data":{"site":{"siteMetadata":{"title":"Daily Study | Sukjae"}},"markdownRemark":{"id":"2df38b4e-80ce-5d2d-95bd-b6f774f18b48","excerpt":"HTML의 여러 엘리먼트를 스타일링 하기 위해 다양한 방법이 존재한다.\n엘리먼트 자체가 약속에 의해 스타일을 포함하는 경우가 있고, 브라우저가 임의로 스타일링 하는 경우도 있으며 css 파일로 적용할 수 있다. 아니면 inline style…","html":"<p>HTML의 여러 엘리먼트를 스타일링 하기 위해 다양한 방법이 존재한다.\n엘리먼트 자체가 약속에 의해 스타일을 포함하는 경우가 있고, 브라우저가 임의로 스타일링 하는 경우도 있으며 css 파일로 적용할 수 있다. 아니면 inline style등으로 지정할 수 있는데 이 모든 스타일 옵션은 정해진 우선순위를 따른다. 보통 inline style 속성은 가장 강력한 스타일 방법중에 하난데, 재밌게도 HTML 속성(attribute)로서 스타일을 지정할 수 있는 엘리먼트들이 있고, 그 경우에 우선순위가 낮다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> valid<span class=\"token punctuation\">,</span> works<span class=\"token punctuation\">,</span> is a good idea <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>img width<span class=\"token operator\">=</span><span class=\"token string\">\"500\"</span> height<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"...\"</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"...\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>iframe width<span class=\"token operator\">=</span><span class=\"token string\">\"600\"</span> height<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"...\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>iframe<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>svg width<span class=\"token operator\">=</span><span class=\"token string\">\"20\"</span> height<span class=\"token operator\">=</span><span class=\"token string\">\"20\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>svg<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> not valid<span class=\"token punctuation\">,</span> doesn't work<span class=\"token punctuation\">,</span> not a good idea <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>div width<span class=\"token operator\">=</span><span class=\"token string\">\"40\"</span> height<span class=\"token operator\">=</span><span class=\"token string\">\"40\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>span width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> height<span class=\"token operator\">=</span><span class=\"token string\">\"10\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n<span class=\"token comment\">// 출처: 하단 링크</span></code></pre></div>\n<p>여기서 의아할 수 있는 부분이 있다. 위에서 언급 하였듯이, 스타일은 우선순위를 갖고 있고, inline이 아주 강력한 우선순위를 갖음에도(보통 !important만이 우회할 유일한 방법이다) inline과 유사하게 엘리먼트의 속성으로서 추가하는 스타일은 그 우선순위가 가장 낮다(css보다도!)</p>\n<p>어찌보면 무언가 논리적이지 못해 보일 수 있다 생각할 수 있지만 이 방식은 보통 잘못되는 상황에서의 대처에 유용하게 쓰인다고 한다. 쉽게 생각하면 default 값으로서 문제가 생겼을때만 적용되고 평상시에는 무시해도 되는 정도의 우선순위를 갖는 fallback styling 으로서의 역할을 하는것 이다.</p>\n<p>즉 기타 스타일링 자원이 아직 로드 되지 않았을 때나, 불러오는데 문제가 생겨서 정상적인 형태를 유지하게 하기 어려울 때 사용 되는 것이다. 본문의 내용에 따르면 svg의 경우 이 속성없이는 잘못된 상황에서 정말 이상한 형태가 나오기도 한다고 한다.</p>\n<p>이제 이런것도 있음을 알게 되었으니, 다음 글로는 css의 스타일 우선순위에 대해 다시 한번 살펴보고 정리하도록 해야겠다.</p>\n<p>참고: <a href=\"https://css-tricks.com/whats-the-difference-between-width-height-in-css-and-width-height-html-attributes/\">https://css-tricks.com/whats-the-difference-between-width-height-in-css-and-width-height-html-attributes/</a></p>","frontmatter":{"title":"CSS의 Width/Height VS HTML attributes의 Width/Height","date":"January 25, 2020"}}},"pageContext":{"slug":"/daily/2020-01-25/","previous":{"fields":{"slug":"/daily/2020-01-23/"},"frontmatter":{"title":"HTML 엘리먼트 기본 스타일 제거하기"}},"next":{"fields":{"slug":"/online-conference/functional-programming-in-40-min/"},"frontmatter":{"title":"GOTO 2018 • Functional Programming in 40 Minutes • Russ Olsen"}}}}}