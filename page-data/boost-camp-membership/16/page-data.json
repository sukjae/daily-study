{"componentChunkName":"component---src-templates-blog-post-js","path":"/boost-camp-membership/16/","result":{"data":{"site":{"siteMetadata":{"title":"Daily Study | Sukjae"}},"markdownRemark":{"id":"13a10943-da9b-5283-b919-057b7a733230","excerpt":"오늘의 고민들 React에서 useEffect의 실행 흐름 이해하기 다음과 같은 컴포넌트는, 결국 몇번의 “work” 로그를 찍을까? 정답: 3번 그렇다면, 다음은? 정답: 2번! 오늘 다른 부캠원분께서 위와 같은 코드에서 어떻게 작동할지 여쭈어 보았다. 당시에는 나도 useEffect…","html":"<h2>오늘의 고민들</h2>\n<h3>React에서 useEffect의 실행 흐름 이해하기</h3>\n<p>다음과 같은 컴포넌트는, 결국 몇번의 “work” 로그를 찍을까?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./styles.css\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"work\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> rootElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> rootElement<span class=\"token punctuation\">)</span></code></pre></div>\n<p>정답: 3번</p>\n<p>그렇다면, 다음은?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./styles.css\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"work\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> rootElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> rootElement<span class=\"token punctuation\">)</span></code></pre></div>\n<p>정답: 2번!</p>\n<p>오늘 다른 부캠원분께서 위와 같은 코드에서 어떻게 작동할지 여쭈어 보았다.</p>\n<p>당시에는 나도 useEffect 두번째 인자의 default value 가 무엇인지 명확히 알지 못하여 선뜻 말하기 어려웠다.</p>\n<p>documentation에 따르면 다음과 같이 나와있다.</p>\n<blockquote>\n<p>By default, effects run after every completed render, but you can choose to fire them only when certain values have changed.</p>\n</blockquote>\n<p>출처: <a href=\"https://reactjs.org/docs/hooks-reference.html#useeffect\">https://reactjs.org/docs/hooks-reference.html#useeffect</a></p>\n<p>이에 대한 실제 구현 코드를 읽지는 못했지만, 매 render마다 App함수가 돈다는 것을 알 수 있다.\n물론, 위와같이 App함수를 임의로 실행시켜 어떤 로직을 처리하는것은 좋지 않다. 그러나, 이러한 질문들로 인해 useEffect에 대해 더 이해를 할 수 있는 좋은 기회였다.</p>\n<p>결국, useEffect의 두번째 인자가 없으면, <code class=\"language-text\">매 render가 종료</code>될 때 마다 useEffect가 실행된다.</p>\n<p>반면, useEffect의 두번째 인자로 빈 배열을 넣으면, <code class=\"language-text\">mount 와 unmount</code> 상황에서만 실행된다.</p>\n<p><strong>그러므로 맨 첫번째 코드를 해석하면 다음과 같을것 같다.</strong></p>\n<ol>\n<li>App함수로 진입</li>\n<li>useState 초기화 및 분해</li>\n<li><strong>console.log <code class=\"language-text\">1회</code></strong></li>\n<li>useEffect callback등록</li>\n<li>render시작 (이때 a === 0)</li>\n<li>render 종료, mount 종료</li>\n<li>render가 완료되었으므로 useEffect로 전달된 callback 실행!</li>\n<li>callback을 통해 state a의 값을 0에서 1 로 전환</li>\n<li>전후로 state가 갱신 되었으므로, 다시 App으로 진입</li>\n<li>어떠한 방식으로 인해 useState를 sync 맞추고</li>\n<li><strong>console.log <code class=\"language-text\">2회</code></strong></li>\n<li>useEffect callback등록</li>\n<li>전후 state가 변했으므로, render시작 (이때 a === 1)</li>\n<li>render 종료, update 종료</li>\n<li>render가 완료되었으므로 useEffect로 전달된 callback 실행!</li>\n<li>callback을 통해 state a의 값을 1에서 1 로 전환</li>\n<li>전후로 state가 갱신 되었으므로, 다시 App으로 진입</li>\n<li>어떠한 방식으로 인해 useState를 sync 맞추고</li>\n<li><strong>console.log <code class=\"language-text\">3회</code></strong></li>\n<li>useEffect callback등록</li>\n<li>전후 state가 동일하므로, render 안함(shouldComponentUpdate() 영향)</li>\n<li>… 대기</li>\n</ol>\n<p><strong>반면, 두번째 코드를 해석하면 다음과 같을것 같다.</strong></p>\n<ol>\n<li>App함수로 진입</li>\n<li>useState 초기화 및 분해</li>\n<li><strong>console.log <code class=\"language-text\">1회</code></strong></li>\n<li>useEffect callback등록</li>\n<li>render시작 (이때 a === 0)</li>\n<li>render 종료, mount 종료</li>\n<li>mount가 완료되었으므로 useEffect로 전달된 callback 실행!</li>\n<li>callback을 통해 state a의 값을 0에서 1 로 전환</li>\n<li>전후로 state가 갱신 되었으므로, 다시 App으로 진입</li>\n<li>어떠한 방식으로 인해 useState를 sync 맞추고</li>\n<li><strong>console.log <code class=\"language-text\">2회</code></strong></li>\n<li>useEffect callback등록</li>\n<li>전후 state가 변했으므로, render시작 (이때 a === 1)</li>\n<li>render 종료, update 종료</li>\n<li>… 대기</li>\n</ol>\n<h2>오늘의 회고</h2>\n<p>항상 나는 베스트 프렉틱스로 문제를 접근하고, 이러한 안티패턴처럼 생각되는 방식은 생각을 아예 하지 않으려 하였다. 그냥, 리엑트 스럽지 않다는 핑계로…</p>\n<p>그러나, 오늘 이 경험을 통해 새롭게 생각을 바꾸게 되었다. 베스트 프렉티스처럼 예상 가능한 상황이 아닌, 내 예상과 달리 움직이는 전혀 예상치 못한 상황을 생각하며 더 많이 배울 수 있는것 같다. 종종 이러한 이상한(?) 시도를 많이 해야겠다. 이러한 과정속에서 그 흐름을 더욱 명확하게 이해할 수 있을것 같다.</p>\n<p>오늘 또 들게 된 생각은, 부스트 캠프원들이 정말 많은 노력을 하고 계신다는 생각이 들었다. 개개인이 모두 하나에 몰두하여 굉장한 퀄리티의 성과를 내곤 한다. 이를 통하여 나 또한 자극을 받을 수 있었고, 더 열심히 해야겠다는 생각을 강하게 갖게 하였다.</p>\n<p>앞으로 남은 프로젝트 기간 주도적으로 참여하여 의미있는 결과물을 완성하고 싶다.</p>","frontmatter":{"title":"부스트캠프 2019 맴버쉽 16","date":"September 10, 2019"}}},"pageContext":{"slug":"/boost-camp-membership/16/","previous":{"fields":{"slug":"/boost-camp-membership/15/"},"frontmatter":{"title":"부스트캠프 2019 맴버쉽 15"}},"next":{"fields":{"slug":"/boost-camp-membership/17/"},"frontmatter":{"title":"부스트캠프 2019 맴버쉽 17"}}}}}