{"componentChunkName":"component---src-templates-blog-post-js","path":"/daily/2019-11-10/","result":{"data":{"site":{"siteMetadata":{"title":"Daily Study | Sukjae"}},"markdownRemark":{"id":"7e2268b4-0542-53ae-84e6-8d01563c86fb","excerpt":"JS에서 Map도 기본적으로 forEach가 된다. MDN 문서에 따르면, Map에 기본적으로 forEach가 제공된다. 흔히 사용하는 Array.prototype.forEach()와는 콜백 함수로 전달되는 인자가 살짝 다르지만, 그래도 사용법은 동일하다. Array.prototype…","html":"<h2>JS에서 Map도 기본적으로 forEach가 된다.</h2>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\">MDN 문서</a>에 따르면, Map에 기본적으로 forEach가 제공된다.</p>\n<p>흔히 사용하는 Array.prototype.forEach()와는 콜백 함수로 전달되는 인자가 살짝 다르지만, 그래도 사용법은 동일하다.</p>\n<h3>Array.prototype.forEach()</h3>\n<p><code class=\"language-text\">arr.forEach(callback(currentValue [, index [, array]])[, thisArg]);</code></p>\n<p>위의 예시에서 있듯이, 콜백의 인자는 순서대로 <code class=\"language-text\">currentValue</code>, <code class=\"language-text\">index</code>, 그리고 <code class=\"language-text\">array</code> 가 주어진다.</p>\n<h3>Map.prototype.forEach()</h3>\n<p><code class=\"language-text\">myMap.forEach(callback[, thisArg])</code></p>\n<p>유사하게 <code class=\"language-text\">Map</code> 에서의 콜백의 인자는 순서대로 <code class=\"language-text\">element value</code>, <code class=\"language-text\">element key</code>, 그리고 <code class=\"language-text\">Map</code> 이 주어진다.</p>\n<p><code class=\"language-text\">Array</code> 의 <code class=\"language-text\">index</code> 대신에 <code class=\"language-text\">Map</code> 은 <code class=\"language-text\">element key</code> 를 제공하고, 모두가 알다싶이 이 key값에는 함수나 다른 객체같은 것들도 들어올 수 있어 매우 유용할 것 같다.</p>\n<p>그리고, 신기하게 <code class=\"language-text\">forEach</code>, <code class=\"language-text\">map</code>, <code class=\"language-text\">reduce</code> 와 같은 함수형에 적합한 기능중에서 <code class=\"language-text\">Map</code> 에서는 <code class=\"language-text\">forEach</code>만 제공하는 듯 하다.</p>\n<h2>JS에서 indexOf와 findIndex의 차이</h2>\n<p>이름이 비슷해서 햇갈렸다. 둘의 차이는 간단하다.</p>\n<ul>\n<li><code class=\"language-text\">Array.prototype.indexOf()</code> 는 첫 인자로 찾고자 하는 값을 넘긴다</li>\n<li><code class=\"language-text\">Array.prototype.findIndex()</code> 는 첫 인자로 콜백 함수를 넘긴다</li>\n</ul>\n<p>둘간의 사용법중에서 가장 큰 차이는, <code class=\"language-text\">findIndex</code>의 경우에 객체나 배열같이 원시값이 아닌 것들을 탐색할때 주로 사용되는 듯하다.</p>\n<p><a href=\"https://stackoverflow.com/a/41443138\">스택 오버플로우 참고</a></p>\n<h2>JS에서 숫자의 자릿수 구하기</h2>\n<p>다음과 같이 접근하면 된다. 더 좋은 방법이 있는지 찾아봐야 겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> <span class=\"token number\">123</span>\n\n<span class=\"token keyword\">const</span> digit <span class=\"token operator\">=</span> num<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length\n<span class=\"token comment\">// 3</span></code></pre></div>\n<h2>JS의 Map에서 key 값만 배열로 뽑기</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> keys <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> keys <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>myMap<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><a href=\"https://stackoverflow.com/a/35341828\">스택 오버플로우 참고</a></p>","frontmatter":{"title":"JS Map에서 forEach, key값 뽑기 & Array에서 indexof vs findIndex","date":"November 10, 2019"}}},"pageContext":{"slug":"/daily/2019-11-10/","previous":{"fields":{"slug":"/conference/2019-11-06-google-web-knowledge/"},"frontmatter":{"title":"웹 개발자들을 위한 잡다한 웹 지식 세미나"}},"next":{"fields":{"slug":"/daily/2019-11-26/"},"frontmatter":{"title":"Elasticsearch 기본 정리"}}}}}