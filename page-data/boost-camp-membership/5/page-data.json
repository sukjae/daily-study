{"componentChunkName":"component---src-templates-blog-post-js","path":"/boost-camp-membership/5/","result":{"data":{"site":{"siteMetadata":{"title":"Daily Study | Sukjae"}},"markdownRemark":{"id":"c16c1246-5673-5704-b261-6f870fa3b49d","excerpt":"프로젝트 회고 오늘로서 1주일차 FE…","html":"<h2>프로젝트 회고</h2>\n<p>오늘로서 1주일차 FE개발이 완료되었다.</p>\n<p>만족하는 부분도 있지만, 아쉬움이 많이 남는 프로젝트이다.</p>\n<p>첫주차에 텐션이 너무 떨어져 있어서 개발에 집중을 하지 못했고, 컨디션도 좋지 않았다.</p>\n<p>지난 회고에서 언급하였듯이 이는 그저 불필요한 변명일 뿐이고, 실수를 반복하지 않도록 하는 고민이 필요하다.</p>\n<h3>아쉬웠던 부분들…</h3>\n<ol>\n<li>시간 분배를 잘 하지 못했다.</li>\n</ol>\n<p>처음에 시간을 잘 산정하고, 이를 주기적으로 수정하는 작업이 필요했다.</p>\n<p>아직 기능 단위별로 시간을 분배하는 작업이 익숙치 않았고, 이에 따른 점검도 쉽지 않았다.</p>\n<ol start=\"2\">\n<li>테스트를 전혀 작성하지 못했다.</li>\n</ol>\n<p>크게 아쉬웠던 부분중 하나인데 코드 작성에 급급하여 테스트를 전혀 작성하지 못했다.</p>\n<p>TDD로 할까, BDD로 할까 고민하다가 그냥 코드 작성부터 했다.</p>\n<p>잘 모르는 방식(여기서는 vanila JS를 비롯한 web API)일수록 테스트를 굳건히 작성해야 더 효과적인데,</p>\n<p>이를 간과하고 있었다.</p>\n<p>테스트는 선택이 아닌 필수임을 명심하자.</p>\n<ol start=\"3\">\n<li>기능 구현을 완료하지 못했다.</li>\n</ol>\n<p>엔지니어나 개발자에게 시간 약속은 아주 중요하다.</p>\n<p>상황이 어찌 되었든, 정해진 시간에 약속한 퀄리티의 제품을 만들지 못하였던 부분에 반성해야 한다.</p>\n<p>잘못된 부분이나, 실수한 부분을 바로잡고 다음 작업에서 개선하자.</p>\n<ol start=\"4\">\n<li>데일리 회고를 빼먹었다.</li>\n</ol>\n<p>노트에 적긴 하였지만, 이에 대한 내용을 기록하지 않았다.</p>\n<p>해야 함을 알지만, 스트레스가 많이 쌓여서 무엇을 하고싶지 않았던것 같다.</p>\n<p>이제 컨디션이 돌아왔으니, 이 컨디션을 최대한 유지하도록 하자.</p>\n<ol start=\"5\">\n<li>Observer 패턴을 사용하지 못했다.</li>\n</ol>\n<p>이해가 부족하여 활용을 하지 못했다. 이 부분에 대한 추가 학습이 필요하다.</p>\n<h3>잘했던 부분</h3>\n<ol>\n<li>구조에 대한 고민을 많이 하였다.</li>\n</ol>\n<p>처음 과제를 접하였을 때 부터 마음 먹은 부분은, 이 과제를 통하여 새로운 기술과 구조에 대한 사고를 강화하는 것이였다.</p>\n<p>어떻게 보면 흔하고, 뻔한 과제처럼 보이지만 그 속에서 내가 원하는 것을 얻기 위해 한 선택이였고, 많은것을 얻을 수 있었다.</p>\n<p>자주 사용하는 ReactJS와 router등을 굉장히 low level의 api를 사용하여 모방할 수 있었고, 이는 전반적인 흐름을 이해하는데 큰 도움이 되었다.</p>\n<p>또, Component로 재사용이 가능한 Template을 만들고자 하였던 노력을 통해 새로운 기술들을 많이 접할 수 있었다. (Template tag, tagged template literal, 다양한 event관련 함수들)</p>\n<p>언젠간 이런 말을 마스터님께 들었던것 같다.</p>\n<blockquote>\n<p>개구리를 이해하려거든 해부가 아닌 창조를 해봐라..?</p>\n</blockquote>\n<ol start=\"2\">\n<li>새로운것을 많이 접하고, 편법이 아닌 언어와 API가 설계된 방향으로 구현하고자 노력했다.</li>\n</ol>\n<p>이번 기회를 통해 web API의 다양한 API들에 대해 이해할 수 있었다.</p>\n<p>예를 들어, HTML Element에 직접적으로 <code class=\"language-text\">onclick</code> 이나 <code class=\"language-text\">onfocusout</code> 등이 어떨때 쓰이고 못쓰이는지,</p>\n<p><code class=\"language-text\">button</code> 엘리먼트에는 어떤 속성들(reset, button, submit 등)이 있고, 어떤 기능을 하며 어떻게 활용하는지 등등.</p>\n<p>최대한 HTML Element와 WEB API가 제공하는 기능만을 사용하며, 이를 내 임의대로 우회하지 않으려 노력했다. (이번 과제 자체가 워낙 많이 쓰이는 예시이기에 이 기능들이 구현되어 있지 않을 수 없다는 판단하에)</p>\n<h3>발전된 모습을 위해 실천할 구체적인 액션</h3>\n<ol>\n<li>\n<p>테스트 코드부터 작성한다.</p>\n<ul>\n<li>일단 BDD등을 생각하지 말자. 무조건 TDD로 작성하자.</li>\n</ul>\n</li>\n<li>요구 사항 분석에 소요 시간을 필히 명시한다.</li>\n<li>요구 사항 분석을 Github이슈에 넣고, 이를 Commit message로 관리한다.</li>\n<li>통일된 규격의 Commit message를 사용한다.</li>\n<li>가장 작은 단위의 유의미한 함수가 생성될때마다 commit을 남긴다.</li>\n<li>주어진 시간 최선을 다한다.</li>\n</ol>\n<h2>마스터 클래스 정리</h2>\n<ul>\n<li>코드의 불필요한 변경이 쓰이기 때문에 console.log보다는 breeakpoint와 같은 디버깅 도구를 사용하자</li>\n<li>문자열을 별도의 파일로 분리하여 관리하자</li>\n<li>\n<p>회고에 속도를 포함하자</p>\n<ul>\n<li>원래 어떻게 하려 했는데, 어떻게 되었는지</li>\n</ul>\n</li>\n<li>동사 + 명사 순서로 네이밍하</li>\n<li>\n<p>if가 중첩되면 스텝마다 기억해야할 정보가 많아짐</p>\n<ul>\n<li>상위 if에서 사전에 returen하자</li>\n</ul>\n</li>\n<li>함수를 극단적으로 분리하자</li>\n<li>\n<p>모든뷰를 반응형으로 하려면 힘듬.</p>\n<ul>\n<li>모바일/데스크톱, 그리고 세부적으로 반응형으로 전략</li>\n</ul>\n</li>\n<li>객체를 중첩하여 변수명을 줄여보자</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/// 이렇게 적을수도 있지만...</span>\n<span class=\"token function\">validateEmailNow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 이렇게 접근할 수도 있다.</span>\n<span class=\"token punctuation\">{</span>\n  validate<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">now</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>이벤트 위임에 대해 공부하자</li>\n<li>switch case 구조 제거하는 방법 (mapping 만들기)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 이렇게 switch-case로 접근할 수 있지만,</span>\n<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">case</span> <span class=\"token string\">\"a\"</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">break</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 이렇게 mapping을 만들고,</span>\n<span class=\"token comment\">// key값으로 접근함으로서 switch/case를 제거할 수 있다.</span>\n<span class=\"token keyword\">const</span> tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">a</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">b</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"a\"</span>\ntmp<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"부스트캠프 2019 맴버쉽 5","date":"August 30, 2019"}}},"pageContext":{"slug":"/boost-camp-membership/5/","previous":{"fields":{"slug":"/boost-camp-membership/4/"},"frontmatter":{"title":"부스트캠프 2019 맴버쉽 4"}},"next":{"fields":{"slug":"/boost-camp-membership/6/"},"frontmatter":{"title":"부스트캠프 2019 맴버쉽 6"}}}}}